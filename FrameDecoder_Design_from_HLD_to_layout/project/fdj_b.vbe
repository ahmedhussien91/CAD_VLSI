-- VHDL data flow description generated from `fdj_b`
--		date : Wed May 27 19:41:42 2015


-- Entity Declaration

ENTITY fdj_b IS
  PORT (
  ck : in BIT;	-- ck
  vdd : in BIT;	-- vdd
  vss : in BIT;	-- vss
  word_in : in bit_vector(7 DOWNTO 0) ;	-- word_in
  reset : in BIT;	-- reset
  error_f : out BIT;	-- error_f
  data : out bit_vector(7 DOWNTO 0) ;	-- data
  address : out bit_vector(7 DOWNTO 0) 	-- address
  );
END fdj_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF fdj_b IS
  SIGNAL fsm_h_h_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_h_h_cs
  SIGNAL fsm_g_g_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_g_g_cs
  SIGNAL fsm_f_f_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_f_f_cs
  SIGNAL fsm_e_e_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_e_e_cs
  SIGNAL fsm_d_d_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_d_d_cs
  SIGNAL fsm_c_c_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_c_c_cs
  SIGNAL fsm_b_b_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_b_b_cs
  SIGNAL fsm_a_a_cs : REG_VECTOR(4 DOWNTO 0) REGISTER;	-- fsm_a_a_cs
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux15 : BIT;		-- aux15
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux22 : BIT;		-- aux22
  SIGNAL aux23 : BIT;		-- aux23
  SIGNAL aux27 : BIT;		-- aux27
  SIGNAL aux29 : BIT;		-- aux29
  SIGNAL aux30 : BIT;		-- aux30
  SIGNAL aux31 : BIT;		-- aux31
  SIGNAL aux34 : BIT;		-- aux34
  SIGNAL aux35 : BIT;		-- aux35
  SIGNAL aux36 : BIT;		-- aux36
  SIGNAL aux37 : BIT;		-- aux37
  SIGNAL aux41 : BIT;		-- aux41
  SIGNAL aux42 : BIT;		-- aux42
  SIGNAL aux43 : BIT;		-- aux43
  SIGNAL aux45 : BIT;		-- aux45
  SIGNAL aux46 : BIT;		-- aux46
  SIGNAL aux48 : BIT;		-- aux48
  SIGNAL aux49 : BIT;		-- aux49
  SIGNAL aux50 : BIT;		-- aux50
  SIGNAL aux51 : BIT;		-- aux51
  SIGNAL aux52 : BIT;		-- aux52
  SIGNAL aux53 : BIT;		-- aux53
  SIGNAL aux54 : BIT;		-- aux54
  SIGNAL aux55 : BIT;		-- aux55
  SIGNAL aux56 : BIT;		-- aux56
  SIGNAL aux57 : BIT;		-- aux57
  SIGNAL aux58 : BIT;		-- aux58
  SIGNAL aux60 : BIT;		-- aux60
  SIGNAL aux61 : BIT;		-- aux61
  SIGNAL aux62 : BIT;		-- aux62
  SIGNAL aux63 : BIT;		-- aux63
  SIGNAL aux64 : BIT;		-- aux64
  SIGNAL aux65 : BIT;		-- aux65
  SIGNAL aux66 : BIT;		-- aux66
  SIGNAL aux67 : BIT;		-- aux67
  SIGNAL aux68 : BIT;		-- aux68
  SIGNAL aux70 : BIT;		-- aux70
  SIGNAL aux71 : BIT;		-- aux71
  SIGNAL aux72 : BIT;		-- aux72
  SIGNAL aux73 : BIT;		-- aux73
  SIGNAL aux74 : BIT;		-- aux74
  SIGNAL aux75 : BIT;		-- aux75
  SIGNAL aux76 : BIT;		-- aux76
  SIGNAL aux77 : BIT;		-- aux77
  SIGNAL aux78 : BIT;		-- aux78
  SIGNAL aux79 : BIT;		-- aux79
  SIGNAL aux80 : BIT;		-- aux80
  SIGNAL aux81 : BIT;		-- aux81
  SIGNAL aux82 : BIT;		-- aux82
  SIGNAL aux83 : BIT;		-- aux83
  SIGNAL aux84 : BIT;		-- aux84
  SIGNAL aux85 : BIT;		-- aux85
  SIGNAL aux86 : BIT;		-- aux86
  SIGNAL aux87 : BIT;		-- aux87
  SIGNAL aux88 : BIT;		-- aux88
  SIGNAL aux89 : BIT;		-- aux89
  SIGNAL aux90 : BIT;		-- aux90
  SIGNAL aux91 : BIT;		-- aux91
  SIGNAL aux92 : BIT;		-- aux92
  SIGNAL aux93 : BIT;		-- aux93
  SIGNAL aux94 : BIT;		-- aux94
  SIGNAL aux95 : BIT;		-- aux95
  SIGNAL aux96 : BIT;		-- aux96
  SIGNAL aux97 : BIT;		-- aux97
  SIGNAL aux98 : BIT;		-- aux98

BEGIN
  aux98 <= (word_in(1) AND word_in(6));
  aux97 <= (fsm_h_h_cs(0) AND fsm_h_h_cs(1));
  aux96 <= (fsm_h_h_cs(0) AND aux95);
  aux95 <= (word_in(7) AND fsm_h_h_cs(1));
  aux94 <= ((NOT(reset) AND NOT(fsm_g_g_cs(2))) AND 
fsm_g_g_cs(1));
  aux93 <= (aux62 AND NOT(fsm_f_f_cs(2)));
  aux92 <= NOT(fsm_f_f_cs(4) OR fsm_f_f_cs(0));
  aux91 <= (fsm_e_e_cs(0) OR fsm_e_e_cs(3));
  aux90 <= (NOT(fsm_e_e_cs(3)) AND NOT(fsm_e_e_cs(4)));
  aux89 <= (NOT(fsm_e_e_cs(3)) AND fsm_e_e_cs(4));
  aux88 <= (fsm_e_e_cs(0) AND fsm_e_e_cs(1));
  aux87 <= (fsm_d_d_cs(0) OR fsm_d_d_cs(3));
  aux86 <= (NOT(fsm_d_d_cs(3)) AND NOT(fsm_d_d_cs(4)));
  aux85 <= (NOT(fsm_d_d_cs(3)) AND fsm_d_d_cs(4));
  aux84 <= (fsm_c_c_cs(0) AND fsm_c_c_cs(1) AND NOT(
fsm_c_c_cs(2)));
  aux83 <= NOT(fsm_c_c_cs(4) AND NOT(fsm_c_c_cs(1)));
  aux82 <= (word_in(7) AND word_in(5));
  aux81 <= (NOT(fsm_b_b_cs(2)) AND fsm_b_b_cs(1));
  aux80 <= (fsm_b_b_cs(3) OR fsm_b_b_cs(4) OR fsm_b_b_cs(0));
  aux79 <= (NOT(word_in(7)) AND word_in(5));
  aux78 <= (NOT(fsm_b_b_cs(4)) AND fsm_b_b_cs(0));
  aux77 <= (fsm_a_a_cs(3) OR aux76);
  aux76 <= NOT(NOT(fsm_a_a_cs(4)) AND NOT(fsm_a_a_cs(0)));
  aux75 <= (fsm_e_e_cs(0) AND fsm_e_e_cs(4));
  aux74 <= (fsm_a_a_cs(1) AND NOT(fsm_a_a_cs(4)));
  aux73 <= (fsm_d_d_cs(2) OR fsm_d_d_cs(3));
  aux72 <= (aux71 AND fsm_h_h_cs(1));
  aux71 <= (NOT(reset) AND NOT(fsm_h_h_cs(2)));
  aux70 <= NOT(fsm_h_h_cs(2) AND NOT(fsm_h_h_cs(4)));
  aux68 <= (NOT(fsm_g_g_cs(2)) OR NOT(fsm_g_g_cs(3)));
  aux67 <= (NOT(reset) AND fsm_g_g_cs(4));
  aux66 <= (NOT(reset) AND aux65);
  aux65 <= (NOT(fsm_g_g_cs(4)) OR fsm_g_g_cs(0));
  aux64 <= (fsm_g_g_cs(0) OR fsm_g_g_cs(3));
  aux63 <= (NOT(reset) AND NOT(fsm_f_f_cs(3)));
  aux62 <= (NOT(reset) AND fsm_f_f_cs(1));
  aux61 <= NOT(NOT(fsm_f_f_cs(3)) AND aux92);
  aux60 <= ((NOT(fsm_f_f_cs(3)) AND word_in(5)) AND 
fsm_f_f_cs(4));
  aux58 <= (aux57 AND fsm_e_e_cs(1));
  aux57 <= (NOT(reset) AND NOT(fsm_e_e_cs(2)));
  aux56 <= NOT(fsm_e_e_cs(2) OR NOT(fsm_e_e_cs(1)));
  aux55 <= (aux54 AND NOT(fsm_d_d_cs(2)));
  aux54 <= (NOT(reset) AND fsm_d_d_cs(1));
  aux53 <= (NOT(reset) AND fsm_d_d_cs(0));
  aux52 <= NOT(NOT(aux49) OR NOT(word_in(5)));
  aux51 <= NOT(fsm_d_d_cs(1) AND NOT(fsm_d_d_cs(2)));
  aux50 <= (aux49 AND NOT(word_in(5)));
  aux49 <= (NOT(word_in(4)) AND word_in(7));
  aux48 <= ((NOT(reset) AND fsm_c_c_cs(1)) AND NOT(
fsm_c_c_cs(2)));
  aux46 <= (NOT(reset) AND word_in(1));
  aux45 <= ((word_in(4) AND NOT(word_in(7))) AND word_in(5));
  aux43 <= (NOT(reset) AND fsm_c_c_cs(4));
  aux42 <= (fsm_c_c_cs(1) AND NOT(fsm_c_c_cs(2)));
  aux41 <= ((NOT(fsm_b_b_cs(4)) OR fsm_b_b_cs(0)) AND ((
word_in(1) OR fsm_b_b_cs(4)) AND aux37));
  aux37 <= (NOT(reset) AND NOT(fsm_b_b_cs(3)));
  aux36 <= NOT(NOT(fsm_b_b_cs(3)) AND NOT(fsm_b_b_cs(4)));
  aux35 <= (word_in(1) AND NOT(fsm_b_b_cs(3)));
  aux34 <= (((aux31 AND NOT(word_in(4))) AND word_in(7)) AND
 NOT(word_in(5)));
  aux31 <= (aux8 AND NOT(word_in(2)));
  aux30 <= NOT(NOT(aux14) AND NOT(fsm_a_a_cs(4)));
  aux29 <= ((aux27 AND word_in(4)) AND NOT(word_in(7)));
  aux27 <= ((((word_in(1) AND word_in(3)) AND word_in(6)) 
AND NOT(word_in(0))) AND word_in(2));
  aux23 <= (NOT(reset) AND aux15);
  aux22 <= (aux21 AND word_in(5));
  aux21 <= ((aux19 AND NOT(word_in(4))) AND word_in(7));
  aux19 <= (aux18 AND word_in(2));
  aux18 <= (((word_in(1) AND NOT(word_in(3))) AND word_in(6)
) AND word_in(0));
  aux15 <= (NOT(fsm_a_a_cs(3)) OR aux14);
  aux14 <= (NOT(fsm_a_a_cs(2)) AND fsm_a_a_cs(1));
  aux13 <= (((aux10 AND NOT(word_in(4))) AND word_in(7)) AND
 NOT(word_in(5)));
  aux10 <= (aux9 AND NOT(word_in(2)));
  aux9 <= (aux8 AND NOT(word_in(0)));
  aux8 <= ((NOT(word_in(1)) AND NOT(word_in(3))) AND NOT(
word_in(6)));
  aux6 <= (fsm_f_f_cs(3) OR NOT(fsm_f_f_cs(4)));
  aux5 <= (fsm_b_b_cs(3) OR NOT(fsm_b_b_cs(4)));
  aux4 <= (fsm_g_g_cs(2) OR fsm_g_g_cs(3));
  aux3 <= (fsm_f_f_cs(3) OR fsm_f_f_cs(1));
  aux2 <= (fsm_e_e_cs(2) OR fsm_e_e_cs(1));
  aux1 <= NOT((fsm_a_a_cs(3) OR fsm_a_a_cs(2)) OR 
fsm_a_a_cs(1));
  label0 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_a_a_cs (0) <= GUARDED ((((aux22 AND fsm_a_a_cs(2)) OR (word_in(0) AND 
fsm_a_a_cs(3) AND NOT(fsm_a_a_cs(2)))) AND fsm_a_a_cs(1)) OR 
reset OR (aux22 AND fsm_a_a_cs(3)) OR (word_in(0) AND 
aux15 AND fsm_a_a_cs(4)) OR (aux13 AND NOT(
fsm_a_a_cs(3)) AND NOT(fsm_a_a_cs(2)) AND aux74) OR (
word_in(0) AND NOT(fsm_a_a_cs(3)) AND NOT(fsm_a_a_cs(2)) 
AND fsm_a_a_cs(1) AND NOT(fsm_a_a_cs(4)) AND 
fsm_a_a_cs(0)) OR (NOT(fsm_a_a_cs(3)) AND fsm_a_a_cs(2) AND 
NOT(aux76)));
  END BLOCK label0;
  label1 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_a_a_cs (1) <= GUARDED ((NOT(aux30) OR fsm_a_a_cs(0)) AND ((((aux29 AND 
word_in(5)) OR fsm_a_a_cs(2) OR fsm_a_a_cs(1)) AND (
word_in(0) OR NOT(fsm_a_a_cs(2)))) OR fsm_a_a_cs(4)) AND 
aux23);
  END BLOCK label1;
  label2 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_a_a_cs (2) <= GUARDED ((aux34 OR aux77) AND (fsm_a_a_cs(3) OR NOT(
fsm_a_a_cs(4))) AND NOT(reset) AND NOT(fsm_a_a_cs(2)) AND 
fsm_a_a_cs(1));
  END BLOCK label2;
  label3 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_a_a_cs (3) <= GUARDED (aux77 AND aux30 AND aux23);
  END BLOCK label3;
  label4 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_a_a_cs (4) <= GUARDED ((NOT(reset) AND (NOT(fsm_a_a_cs(3)) OR NOT(
fsm_a_a_cs(2))) AND fsm_a_a_cs(1) AND fsm_a_a_cs(4)) OR (NOT(
reset) AND NOT(fsm_a_a_cs(3)) AND fsm_a_a_cs(2) AND 
NOT(fsm_a_a_cs(4))));
  END BLOCK label4;
  label5 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_b_b_cs (0) <= GUARDED ((((NOT(word_in(3)) AND word_in(6) AND word_in(0)
 AND word_in(2) AND NOT(word_in(4)) AND word_in(7)
 AND word_in(5) AND aux78) OR NOT(fsm_b_b_cs(2))) 
AND ((aux35 AND aux78) OR (word_in(1) AND aux36) OR 
(aux13 AND NOT(aux36))) AND fsm_b_b_cs(1)) OR (NOT
(aux36) AND NOT(fsm_b_b_cs(0)) AND fsm_b_b_cs(2)) 
OR (aux35 AND fsm_b_b_cs(4)) OR reset OR (aux22 AND
 fsm_b_b_cs(3)));
  END BLOCK label5;
  label6 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_b_b_cs (1) <= GUARDED ((((aux41 AND fsm_b_b_cs(2)) OR (NOT(reset) AND 
fsm_b_b_cs(0) AND NOT(fsm_b_b_cs(2)))) AND fsm_b_b_cs(1)) OR (
((word_in(3) AND word_in(6) AND NOT(word_in(0)) 
AND word_in(2) AND word_in(4) AND aux79) OR (
fsm_b_b_cs(4) AND fsm_b_b_cs(0)) OR fsm_b_b_cs(2)) AND aux41 
AND NOT(fsm_b_b_cs(1))));
  END BLOCK label6;
  label7 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_b_b_cs (2) <= GUARDED ((aux34 OR aux80) AND NOT(reset) AND aux5 AND 
aux81);
  END BLOCK label7;
  label8 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_b_b_cs (3) <= GUARDED ((NOT(aux5) OR aux81) AND NOT(reset) AND aux80);
  END BLOCK label8;
  label9 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_b_b_cs (4) <= GUARDED (((aux37 AND NOT(fsm_b_b_cs(4))) OR fsm_b_b_cs(1)
) AND ((aux37 AND fsm_b_b_cs(2)) OR (NOT(reset) 
AND fsm_b_b_cs(4) AND NOT(fsm_b_b_cs(2)))));
  END BLOCK label9;
  label10 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_c_c_cs (0) <= GUARDED (reset OR (aux22 AND fsm_c_c_cs(1) AND 
fsm_c_c_cs(2)) OR (word_in(2) AND (fsm_c_c_cs(4) OR 
fsm_c_c_cs(0)) AND fsm_c_c_cs(1) AND NOT(fsm_c_c_cs(2))) OR ((
(aux18 AND NOT(word_in(4)) AND aux82) OR aux42) 
AND word_in(2) AND fsm_c_c_cs(3)) OR ((((
fsm_c_c_cs(4) OR NOT(fsm_c_c_cs(0))) AND (word_in(2) OR NOT(
fsm_c_c_cs(4))) AND fsm_c_c_cs(2)) OR ((((NOT(word_in(2)) OR 
fsm_c_c_cs(0)) AND aux9 AND NOT(fsm_c_c_cs(4)) AND NOT(
word_in(4)) AND word_in(7) AND NOT(word_in(5)) AND 
fsm_c_c_cs(1)) OR (word_in(2) AND NOT(aux83))) AND NOT(
fsm_c_c_cs(2)))) AND NOT(fsm_c_c_cs(3))));
  END BLOCK label10;
  label11 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_c_c_cs (1) <= GUARDED ((aux42 OR NOT(fsm_c_c_cs(3))) AND ((aux46 AND 
word_in(3) AND word_in(6) AND NOT(word_in(0)) AND 
word_in(2) AND NOT(fsm_c_c_cs(4)) AND aux45 AND NOT(
fsm_c_c_cs(1))) OR (aux43 AND fsm_c_c_cs(0)) OR (NOT(reset) 
AND word_in(2) AND NOT(fsm_c_c_cs(4)) AND 
fsm_c_c_cs(2)) OR (NOT(reset) AND aux84)));
  END BLOCK label11;
  label12 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_c_c_cs (2) <= GUARDED ((((fsm_c_c_cs(0) OR aux50) AND (aux31 OR 
fsm_c_c_cs(0)) AND NOT(fsm_c_c_cs(4))) OR fsm_c_c_cs(3)) AND 
aux48);
  END BLOCK label12;
  label13 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_c_c_cs (3) <= GUARDED ((aux48 AND fsm_c_c_cs(3)) OR (NOT(reset) AND (
fsm_c_c_cs(4) OR aux84) AND NOT(fsm_c_c_cs(3))));
  END BLOCK label13;
  label14 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_c_c_cs (4) <= GUARDED ((NOT(fsm_c_c_cs(2)) OR NOT(fsm_c_c_cs(3))) AND (
aux43 OR fsm_c_c_cs(2)) AND NOT(reset) AND aux83);
  END BLOCK label14;
  label15 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_d_d_cs (0) <= GUARDED ((((NOT(aux52) AND fsm_d_d_cs(1) AND 
fsm_d_d_cs(2)) OR reset OR (fsm_d_d_cs(0) AND fsm_d_d_cs(1)) 
OR fsm_d_d_cs(3)) AND (reset OR (aux22 AND aux51) 
OR (word_in(3) AND NOT(aux51)))) OR (((aux98 AND 
word_in(0) AND word_in(2) AND NOT(word_in(4)) AND 
word_in(7) AND word_in(5) AND fsm_d_d_cs(2)) OR word_in(3))
 AND aux85) OR (((NOT(fsm_d_d_cs(0)) AND 
fsm_d_d_cs(2)) OR ((NOT(word_in(3)) OR fsm_d_d_cs(0)) AND NOT(
word_in(1)) AND NOT(word_in(6)) AND NOT(word_in(0)) AND NOT
(word_in(2)) AND NOT(word_in(4)) AND word_in(7) 
AND NOT(word_in(5)) AND fsm_d_d_cs(1) AND NOT(
fsm_d_d_cs(2)))) AND aux86));
  END BLOCK label15;
  label16 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_d_d_cs (1) <= GUARDED ((aux53 AND fsm_d_d_cs(1) AND NOT(fsm_d_d_cs(2)))
 OR (aux53 AND aux85) OR (((aux98 AND NOT(
word_in(0)) AND word_in(2) AND word_in(4) AND NOT(
word_in(7)) AND word_in(5) AND NOT(fsm_d_d_cs(1))) OR 
fsm_d_d_cs(2)) AND NOT(reset) AND word_in(3) AND aux86));
  END BLOCK label16;
  label17 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_d_d_cs (2) <= GUARDED (NOT(aux85) AND (aux34 OR aux87) AND aux55);
  END BLOCK label17;
  label18 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_d_d_cs (3) <= GUARDED ((NOT(reset) AND aux85) OR (aux87 AND aux55));
  END BLOCK label18;
  label19 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_d_d_cs (4) <= GUARDED ((aux54 AND (NOT(fsm_d_d_cs(2)) OR NOT(
fsm_d_d_cs(3))) AND fsm_d_d_cs(4)) OR (NOT(reset) AND 
fsm_d_d_cs(2) AND aux86));
  END BLOCK label19;
  label20 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_e_e_cs (0) <= GUARDED (((reset OR aux88 OR fsm_e_e_cs(3)) AND (reset OR
 (word_in(4) AND aux56) OR (aux22 AND NOT(aux56)))
) OR (((aux19 AND word_in(7) AND word_in(5) AND 
fsm_e_e_cs(2)) OR word_in(4)) AND aux89) OR (aux2 AND ((aux10 
AND word_in(7) AND NOT(word_in(5)) AND NOT(
fsm_e_e_cs(2)) AND fsm_e_e_cs(0)) OR ((aux13 OR fsm_e_e_cs(2))
 AND NOT(fsm_e_e_cs(0)))) AND aux90));
  END BLOCK label20;
  label21 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_e_e_cs (1) <= GUARDED (((aux56 OR NOT(fsm_e_e_cs(3))) AND NOT(reset) 
AND aux75) OR (((NOT(aux56) AND ((aux27 AND aux79) 
OR fsm_e_e_cs(2)) AND NOT(reset) AND word_in(4) AND
 NOT(fsm_e_e_cs(3))) OR (aux57 AND aux88)) AND NOT
(fsm_e_e_cs(4))));
  END BLOCK label21;
  label22 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_e_e_cs (2) <= GUARDED (NOT(aux89) AND (aux34 OR aux91) AND aux58);
  END BLOCK label22;
  label23 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_e_e_cs (3) <= GUARDED ((NOT(reset) AND aux89) OR (aux91 AND aux58));
  END BLOCK label23;
  label24 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_e_e_cs (4) <= GUARDED (((NOT(fsm_e_e_cs(2)) OR NOT(fsm_e_e_cs(3))) AND 
NOT(reset) AND fsm_e_e_cs(1) AND fsm_e_e_cs(4)) OR (
NOT(reset) AND fsm_e_e_cs(2) AND aux90));
  END BLOCK label24;
  label25 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_f_f_cs (0) <= GUARDED (((NOT(aux61) OR aux60 OR (aux3 AND aux21 AND 
word_in(5)) OR reset) AND fsm_f_f_cs(2)) OR (((
fsm_f_f_cs(1) AND word_in(5) AND NOT(fsm_f_f_cs(4)) AND 
fsm_f_f_cs(0)) OR ((aux21 OR fsm_f_f_cs(1)) AND fsm_f_f_cs(3) 
AND word_in(5)) OR reset OR aux60 OR (aux10 AND NOT(
fsm_f_f_cs(3)) AND NOT(word_in(4)) AND word_in(7) AND 
fsm_f_f_cs(1) AND NOT(word_in(5)) AND NOT(fsm_f_f_cs(4)))) AND
 NOT(fsm_f_f_cs(2))));
  END BLOCK label25;
  label26 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_f_f_cs (1) <= GUARDED (((NOT(fsm_f_f_cs(4)) OR fsm_f_f_cs(0)) AND ((
aux29 AND NOT(fsm_f_f_cs(1)) AND word_in(5)) OR 
fsm_f_f_cs(4)) AND aux63) OR (aux63 AND word_in(5) AND NOT(
fsm_f_f_cs(4)) AND fsm_f_f_cs(2)) OR (aux62 AND fsm_f_f_cs(0) 
AND NOT(fsm_f_f_cs(2))));
  END BLOCK label26;
  label27 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_f_f_cs (2) <= GUARDED ((aux34 OR fsm_f_f_cs(3) OR NOT(aux92)) AND aux6 
AND aux93);
  END BLOCK label27;
  label28 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_f_f_cs (3) <= GUARDED ((aux61 AND aux93) OR (aux63 AND fsm_f_f_cs(4)));
  END BLOCK label28;
  label29 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_f_f_cs (4) <= GUARDED ((aux63 AND (fsm_f_f_cs(1) OR NOT(fsm_f_f_cs(4)))
 AND fsm_f_f_cs(2)) OR (aux62 AND fsm_f_f_cs(4) 
AND NOT(fsm_f_f_cs(2))));
  END BLOCK label29;
  label30 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_g_g_cs (0) <= GUARDED ((((aux64 AND NOT(fsm_g_g_cs(2)) AND word_in(6)) 
OR (word_in(1) AND fsm_g_g_cs(2) AND NOT(word_in(3)
) AND word_in(6) AND word_in(0) AND word_in(2) AND
 NOT(fsm_g_g_cs(3)) AND NOT(word_in(4)) AND aux82)
 OR (NOT(fsm_g_g_cs(4)) AND NOT(word_in(1)) AND 
NOT(fsm_g_g_cs(2)) AND NOT(word_in(3)) AND NOT(
word_in(6)) AND NOT(word_in(0)) AND NOT(word_in(2)) AND NOT
(fsm_g_g_cs(3)) AND NOT(word_in(4)) AND word_in(7)
 AND NOT(word_in(5)))) AND fsm_g_g_cs(1)) OR (
aux19 AND fsm_g_g_cs(3) AND aux52) OR (((fsm_g_g_cs(4)
 AND word_in(6)) OR (NOT(fsm_g_g_cs(4)) AND NOT(
fsm_g_g_cs(0)) AND fsm_g_g_cs(2))) AND NOT(fsm_g_g_cs(3))) OR 
reset);
  END BLOCK label30;
  label31 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_g_g_cs (1) <= GUARDED ((aux68 AND (aux67 OR NOT(fsm_g_g_cs(2)) OR 
word_in(6)) AND (fsm_g_g_cs(0) OR fsm_g_g_cs(2)) AND aux66 
AND fsm_g_g_cs(1)) OR (((aux65 AND aux46 AND NOT(
fsm_g_g_cs(2)) AND word_in(3) AND word_in(6) AND NOT(
word_in(0)) AND word_in(2) AND NOT(fsm_g_g_cs(3)) AND aux45
) OR ((aux67 OR (fsm_g_g_cs(2) AND word_in(6))) 
AND aux66 AND NOT(fsm_g_g_cs(3)))) AND NOT(
fsm_g_g_cs(1))));
  END BLOCK label31;
  label32 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_g_g_cs (2) <= GUARDED ((aux64 OR aux50) AND (((fsm_g_g_cs(0) OR (NOT(
word_in(3)) AND NOT(word_in(6)) AND NOT(word_in(2)))) AND 
NOT(fsm_g_g_cs(4)) AND (NOT(word_in(1)) OR 
fsm_g_g_cs(0))) OR fsm_g_g_cs(3)) AND aux94);
  END BLOCK label32;
  label33 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_g_g_cs (3) <= GUARDED ((aux64 AND aux94) OR (aux67 AND NOT(
fsm_g_g_cs(3))));
  END BLOCK label33;
  label34 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_g_g_cs (4) <= GUARDED (((NOT(reset) AND NOT(fsm_g_g_cs(4)) AND 
fsm_g_g_cs(2)) OR fsm_g_g_cs(1)) AND aux68 AND NOT(reset) AND 
(fsm_g_g_cs(4) OR fsm_g_g_cs(2)));
  END BLOCK label34;
  label35 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_h_h_cs (0) <= GUARDED (((aux22 OR reset OR (NOT(fsm_h_h_cs(2)) AND 
aux95)) AND fsm_h_h_cs(3)) OR (((NOT(fsm_h_h_cs(2)) 
AND aux96) OR (fsm_h_h_cs(4) AND word_in(7)) OR 
reset OR (NOT(aux70) AND NOT(fsm_h_h_cs(0))) OR (aux19
 AND fsm_h_h_cs(0) AND NOT(word_in(4)) AND 
word_in(7) AND fsm_h_h_cs(1) AND word_in(5)) OR (aux10 AND 
NOT(fsm_h_h_cs(0)) AND NOT(word_in(4)) AND 
word_in(7) AND fsm_h_h_cs(1) AND NOT(word_in(5)))) AND NOT(
fsm_h_h_cs(3))));
  END BLOCK label35;
  label36 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_h_h_cs (1) <= GUARDED ((((aux71 AND word_in(1) AND word_in(3) AND 
word_in(6) AND NOT(word_in(0)) AND word_in(2) AND NOT(
fsm_h_h_cs(4)) AND word_in(4) AND NOT(word_in(7)) AND NOT(
fsm_h_h_cs(1)) AND word_in(5)) OR (NOT(reset) AND aux96) OR (
NOT(reset) AND fsm_h_h_cs(2) AND NOT(fsm_h_h_cs(4)) 
AND word_in(7)) OR (NOT(reset) AND fsm_h_h_cs(4) AND
 fsm_h_h_cs(0))) AND NOT(fsm_h_h_cs(3))) OR (aux71
 AND aux97));
  END BLOCK label36;
  label37 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_h_h_cs (2) <= GUARDED ((((fsm_h_h_cs(0) OR aux50) AND (aux31 OR 
fsm_h_h_cs(0)) AND NOT(fsm_h_h_cs(4))) OR fsm_h_h_cs(3)) AND 
aux72);
  END BLOCK label37;
  label38 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_h_h_cs (3) <= GUARDED ((aux72 AND fsm_h_h_cs(3)) OR ((fsm_h_h_cs(4) OR 
aux97) AND NOT(reset) AND aux70 AND NOT(fsm_h_h_cs(3))
));
  END BLOCK label38;
  label39 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    fsm_h_h_cs (4) <= GUARDED (((aux71 AND fsm_h_h_cs(4)) OR NOT(fsm_h_h_cs(3))
) AND (NOT(fsm_h_h_cs(4)) OR fsm_h_h_cs(1)) AND 
NOT(reset) AND (fsm_h_h_cs(2) OR fsm_h_h_cs(4)));
  END BLOCK label39;

address (0) <= (NOT(aux1) AND fsm_a_a_cs(4));

address (1) <= ((fsm_b_b_cs(3) OR fsm_b_b_cs(2) OR fsm_b_b_cs(1)
) AND fsm_b_b_cs(4));

address (2) <= (fsm_c_c_cs(4) AND (fsm_c_c_cs(1) OR 
fsm_c_c_cs(2) OR fsm_c_c_cs(3)));

address (3) <= ((fsm_d_d_cs(1) OR aux73) AND fsm_d_d_cs(4));

address (4) <= ((aux2 OR fsm_e_e_cs(3)) AND fsm_e_e_cs(4));

address (5) <= ((aux3 OR fsm_f_f_cs(2)) AND fsm_f_f_cs(4));

address (6) <= (fsm_g_g_cs(4) AND (aux4 OR fsm_g_g_cs(1)));

address (7) <= ((fsm_h_h_cs(2) OR fsm_h_h_cs(1) OR fsm_h_h_cs(3)
) AND fsm_h_h_cs(4));

data (0) <= ((fsm_a_a_cs(3) OR (fsm_a_a_cs(2) AND 
fsm_a_a_cs(4)) OR aux74) AND fsm_a_a_cs(0));

data (1) <= ((fsm_b_b_cs(3) OR (fsm_b_b_cs(4) AND 
fsm_b_b_cs(2)) OR fsm_b_b_cs(1)) AND (aux5 OR fsm_b_b_cs(2)) 
AND fsm_b_b_cs(0));

data (2) <= ((((NOT(fsm_c_c_cs(4)) OR fsm_c_c_cs(2)) AND (
fsm_c_c_cs(4) OR fsm_c_c_cs(1))) OR fsm_c_c_cs(3)) AND 
fsm_c_c_cs(0));

data (3) <= ((fsm_d_d_cs(0) AND aux73 AND fsm_d_d_cs(4)) OR (
fsm_d_d_cs(0) AND (fsm_d_d_cs(1) OR fsm_d_d_cs(3)) AND NOT(
fsm_d_d_cs(4))));

data (4) <= (((fsm_e_e_cs(2) OR fsm_e_e_cs(3)) AND aux75) OR 
(fsm_e_e_cs(0) AND (fsm_e_e_cs(1) OR fsm_e_e_cs(3)
) AND NOT(fsm_e_e_cs(4))));

data (5) <= ((aux6 OR fsm_f_f_cs(2)) AND (aux3 OR 
fsm_f_f_cs(4)) AND fsm_f_f_cs(0));

data (6) <= (((fsm_g_g_cs(4) AND fsm_g_g_cs(0)) OR 
fsm_g_g_cs(3) OR fsm_g_g_cs(1)) AND (NOT(fsm_g_g_cs(4)) OR 
aux4) AND fsm_g_g_cs(0));

data (7) <= ((((fsm_h_h_cs(4) OR fsm_h_h_cs(1)) AND (
fsm_h_h_cs(2) OR NOT(fsm_h_h_cs(4)))) OR fsm_h_h_cs(3)) AND 
fsm_h_h_cs(0));

error_f <= (aux1 AND NOT(aux76));
END;
